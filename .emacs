;; --- System --- ;;

(package-initialize)

;; Kill the menu bar
(menu-bar-mode 0)

;; Make scrolling granular
(setq scroll-step 1)

;; Don't create backups on edit
(setq make-backup-files nil)

;; Kill scratch header
(setq initial-scratch-message nil)

;; Always display column numbers
(setq column-number-mode t)

;; Never indent with tabs (though some modes ignore this)
(setq-default indent-tabs-mode nil)
(setq tab-width 4)
(defvaralias 'c-basic-offset 'tab-width)

;; Always enable whitespace-mode by default
;(global-whitespace-mode 1)

;; Set style defaults for printing whitespace-mode marks as well as for cleanup.
;;
;; Cleanup erroneous whitespace in existing files, via `M-x whitespace-cleanup`:
;; - empty lines at beginning/end of file are removed
;; - indentation at beginning of line will convert to spaces
;; - mixing spaces and tabs will convert to spaces
;; - trailing whitespace at the end of a line is removed
(setq whitespace-style
  '(
    ;; Cleanup defaults
    empty
    indentation::space
    space-before-tab::space
    space-after-tab::space
    trailing
    ;; Printing defaults, remove highlighting on all whitespace glyhps
    spaces
    tabs
    newline
    space-mark
    tab-mark
    newline-mark
  )
)

;; Override marks used to show whitespace with ones easier to read
(setq whitespace-display-mappings
  ;; NOTE: The replacement values below are in unicode hex-codes,
  ;;       (insert-char 23ce) can be used to view a glyph.
  '(
    (space-mark 32 [#xB7])        ;; ·
    (newline-mark 10 [#x23CE 10]) ;; ⏎
    (tab-mark 9 [#x25B7 9])       ;; ▷
  )
)


;; --- Initialization --- ;;

;; Load dired Workspace on startup
(setq initial-buffer-choice "~/Workspace")

;; Kill Workspace buffer if a file is loaded from the shell
(defun no-initial-buffer ()
  (setq initial-buffer-choice nil))
(add-hook 'find-file-hook 'no-initial-buffer)


;; --- Key bindings --- ;;

;; Scripts and plugins
(global-set-key (kbd "<f5>") 'clojure-jack-in)
(global-set-key (kbd "<f6>") 'get-term)

;; Traversing (lispy text)
(global-set-key (kbd "C-h") 'forward-char)
(global-set-key (kbd "C-u") 'backward-char)
(global-set-key (kbd "C-t") 'forward-word)
(global-set-key (kbd "C-e") 'backward-word)
(global-set-key (kbd "C-n") 'forward-sexp)
(global-set-key (kbd "C-o") 'backward-sexp)
(global-set-key (kbd "C-s") 'forward-paragraph)
(global-set-key (kbd "C-a") 'backward-paragraph)

;; Editing
(global-set-key (kbd "M-RET") 'dabbrev-expand) ;; TODO: consider hippie-expand
(global-set-key (kbd "M-SPC") 'set-mark-command)
(global-set-key (kbd "M-m"  ) 'kill-region)
(global-set-key (kbd "M-w"  ) 'kill-ring-save)
(global-set-key (kbd "M-v"  ) 'yank)

;; Fix useful shortcuts which were overwritten
(global-set-key (kbd "C-M-h") 'help)
(global-set-key (kbd "C-M-u") 'universal-argument)

;; Custom help messages to spew above bindings
(global-set-key (kbd "C-M-n") (lambda () (interactive) (message "(ctrl) para: a/s  sexp: o/n  word: e/t  char: u/h")))


;; --- Autogenerated --- ;;
;; - do not edit below - ;;
